[{"D:\\Ecommerce\\frontend\\src\\index.js":"1","D:\\Ecommerce\\frontend\\src\\App.js":"2","D:\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","D:\\Ecommerce\\frontend\\src\\data.js":"4","D:\\Ecommerce\\frontend\\src\\components\\Product.js":"5","D:\\Ecommerce\\frontend\\src\\components\\Rating.js":"6","D:\\Ecommerce\\frontend\\src\\Screens\\HomeScreen.js":"7","D:\\Ecommerce\\frontend\\src\\Screens\\ProductScreen.js":"8","D:\\Ecommerce\\frontend\\src\\components\\LoadingBox.jsx":"9","D:\\Ecommerce\\frontend\\src\\components\\MessageBox.jsx":"10","D:\\Ecommerce\\frontend\\src\\store.js":"11","D:\\Ecommerce\\frontend\\src\\reducers\\productReducers.js":"12","D:\\Ecommerce\\frontend\\src\\constants\\productConstants.js":"13","D:\\Ecommerce\\frontend\\src\\actions\\productActions.js":"14","D:\\Ecommerce\\frontend\\src\\Screens\\CartScreen.js":"15","D:\\Ecommerce\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\Ecommerce\\frontend\\src\\constants\\cartConstants.js":"17","D:\\Ecommerce\\frontend\\src\\actions\\cartActions.js":"18","D:\\Ecommerce\\frontend\\src\\Screens\\SigninScreen.js":"19","D:\\Ecommerce\\frontend\\src\\reducers\\userReducer.js":"20","D:\\Ecommerce\\frontend\\src\\constants\\userConstants.js":"21","D:\\Ecommerce\\frontend\\src\\actions\\userActions.js":"22","D:\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js":"23","D:\\Ecommerce\\frontend\\src\\Screens\\ShippingAddressScreen.js":"24","D:\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.jsx":"25","D:\\Ecommerce\\frontend\\src\\Screens\\PaymentMethodScreen.jsx":"26","D:\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.jsx":"27","D:\\Ecommerce\\frontend\\src\\actions\\orderActions.js":"28","D:\\Ecommerce\\frontend\\src\\constants\\orderConstants.js":"29","D:\\Ecommerce\\frontend\\src\\reducers\\orderReducers.js":"30","D:\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.jsx":"31","D:\\Ecommerce\\frontend\\src\\Screens\\OrderHistoryScreen.jsx":"32","D:\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.jsx":"33","D:\\Ecommerce\\frontend\\src\\components\\PrivateRoute.jsx":"34"},{"size":610,"mtime":1609701734693,"results":"35","hashOfConfig":"36"},{"size":4106,"mtime":1620627904588,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":2131,"mtime":1609583087870,"results":"39","hashOfConfig":"36"},{"size":685,"mtime":1609756899435,"results":"40","hashOfConfig":"36"},{"size":776,"mtime":1609312459219,"results":"41","hashOfConfig":"36"},{"size":941,"mtime":1609745557553,"results":"42","hashOfConfig":"36"},{"size":3840,"mtime":1609753498524,"results":"43","hashOfConfig":"36"},{"size":205,"mtime":1610028638360,"results":"44","hashOfConfig":"36"},{"size":253,"mtime":1609763333088,"results":"45","hashOfConfig":"36"},{"size":1638,"mtime":1620411614613,"results":"46","hashOfConfig":"36"},{"size":1034,"mtime":1609748443294,"results":"47","hashOfConfig":"36"},{"size":366,"mtime":1609745885519,"results":"48","hashOfConfig":"36"},{"size":1030,"mtime":1609747788436,"results":"49","hashOfConfig":"36"},{"size":3253,"mtime":1609859257901,"results":"50","hashOfConfig":"36"},{"size":1137,"mtime":1620380906326,"results":"51","hashOfConfig":"36"},{"size":280,"mtime":1610186484728,"results":"52","hashOfConfig":"36"},{"size":1162,"mtime":1610181064166,"results":"53","hashOfConfig":"36"},{"size":2110,"mtime":1610029092394,"results":"54","hashOfConfig":"36"},{"size":2110,"mtime":1620412097265,"results":"55","hashOfConfig":"36"},{"size":904,"mtime":1620410950366,"results":"56","hashOfConfig":"36"},{"size":3310,"mtime":1620411371485,"results":"57","hashOfConfig":"36"},{"size":2948,"mtime":1617389011157,"results":"58","hashOfConfig":"36"},{"size":3108,"mtime":1610179992840,"results":"59","hashOfConfig":"36"},{"size":438,"mtime":1610179543185,"results":"60","hashOfConfig":"36"},{"size":1837,"mtime":1610181675959,"results":"61","hashOfConfig":"36"},{"size":5089,"mtime":1620380213247,"results":"62","hashOfConfig":"36"},{"size":3174,"mtime":1610368333371,"results":"63","hashOfConfig":"36"},{"size":814,"mtime":1610364626630,"results":"64","hashOfConfig":"36"},{"size":1977,"mtime":1617355290912,"results":"65","hashOfConfig":"36"},{"size":6784,"mtime":1617385718235,"results":"66","hashOfConfig":"36"},{"size":1868,"mtime":1617390373653,"results":"67","hashOfConfig":"36"},{"size":3903,"mtime":1620412072210,"results":"68","hashOfConfig":"36"},{"size":521,"mtime":1620628302398,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"m9hbas",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Ecommerce\\frontend\\src\\index.js",[],["146","147"],"D:\\Ecommerce\\frontend\\src\\App.js",[],"D:\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"D:\\Ecommerce\\frontend\\src\\data.js",[],["148","149"],"D:\\Ecommerce\\frontend\\src\\components\\Product.js",[],"D:\\Ecommerce\\frontend\\src\\components\\Rating.js",[],"D:\\Ecommerce\\frontend\\src\\Screens\\HomeScreen.js",["150","151"],"import React from 'react'\r\nimport {useState,useEffect} from 'react';\r\nimport Product from '../components/Product';\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n\r\nfunction HomeScreen() {\r\n  const dispatch = useDispatch()\r\n  const productList = useSelector(state=>state.productList)\r\n  const {loading,error,products} = productList\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n  }, [])\r\n    return (\r\n      <div>\r\n        {loading?<LoadingBox/>:\r\n        error?(<MessageBox variant=\"danger\" error={error}/>):\r\n        (<div className=\"rows center\">\r\n        {\r\n          products.map(product=>( \r\n            <Product product={product} key={product._id}/>\r\n          ))\r\n        }\r\n      </div>)}\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\Ecommerce\\frontend\\src\\Screens\\ProductScreen.js",["152"],"import React,{useEffect,useState } from 'react'\r\nimport Rating from '../components/Rating'\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { detailsProduct } from '../actions/productActions'\r\n\r\n\r\nfunction ProductScreen(props) {\r\n    const dispatch = useDispatch()\r\n    const productId = props.match.params.id\r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading,error,product} = productDetails\r\n    const [qty, setQty] = useState(1)\r\n    useEffect(() => {\r\n        dispatch(detailsProduct(productId))\r\n        \r\n    }, [detailsProduct,productId])\r\n   const addToCartHandler=()=>{\r\n       props.history.push(`/cart/${productId}?qty=${qty}`);\r\n   }\r\n    return (\r\n        <div>\r\n        {loading?<LoadingBox/>:\r\n        error?(<MessageBox variant=\"danger\" error={error}/>):\r\n        (<div>\r\n            <Link to=\"/\">Back to result</Link>\r\n            <div class=\"rows top\">\r\n                <div className=\"col-2\" >\r\n                    <img className=\"large\" src={product.image} alt={product.name}/>\r\n                </div>\r\n                <div className=\"col-1\" >\r\n                    <ul>\r\n                        <li><h1>{product.name}</h1></li>\r\n                        <li><Rating rating={product.rating} numReviews={product.numReviews}/></li>\r\n                        <li>price: ${product.price}</li>\r\n                        <li>\r\n                            Description:\r\n                            <p>{product.description}</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-1\" >\r\n                    <div className=\"card card-body\">\r\n                        <ul>\r\n                            <li>\r\n                                <div className=\"rows\"> \r\n                                    <div>Price</div>\r\n                                    <div className=\"price\">${product.price}</div>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"rows\">\r\n                                    <div>Status</div>\r\n                                    <div className=\"price\">{product.countInStock>0? <span className=\"success\">In Stock</span>:<span className=\"danger\">Unavailable</span>}</div>\r\n                                </div>\r\n                            </li>\r\n                            {product.countInStock >0 &&(\r\n                            <>\r\n                            <li>\r\n                                <div className=\"rows\">\r\n                                    <div>Qty</div>\r\n                                    <div>\r\n                                        <select value={qty} onChange={e=>setQty(e.target.value)}>\r\n                                            {\r\n                                                [...Array(product.countInStock).keys()].map(x=>(\r\n                                                    <option key={x+1} value={x+1}>{x+1}</option>\r\n                                                ))\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li><button onClick={addToCartHandler} className=\"primary block\">Add To Cart</button>\r\n                            </li>\r\n                            </>)}\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)}\r\n        \r\n      </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","D:\\Ecommerce\\frontend\\src\\components\\LoadingBox.jsx",[],"D:\\Ecommerce\\frontend\\src\\components\\MessageBox.jsx",[],"D:\\Ecommerce\\frontend\\src\\store.js",[],"D:\\Ecommerce\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Ecommerce\\frontend\\src\\constants\\productConstants.js",[],"D:\\Ecommerce\\frontend\\src\\actions\\productActions.js",[],"D:\\Ecommerce\\frontend\\src\\Screens\\CartScreen.js",["153"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\nimport MessageBox from '../components/MessageBox'\r\n\r\nfunction CartScreen(props) {\r\n  const dispatch = useDispatch()\r\n  const productId = props.match.params.id\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split('=')[1])\r\n    : 1\r\n  const { cartItems } = useSelector((state) => state.cart)\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [])\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n  const checkoutHandler = () => {\r\n    props.history.push('/signin?redirect=shipping')\r\n  }\r\n  return (\r\n    <div className=\"rows top\">\r\n      <div className=\"col-2\">\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <MessageBox>\r\n            Cart is Empty.<Link to=\"/\">Go to shopping</Link>\r\n          </MessageBox>\r\n        ) : (\r\n          <ul>\r\n            {cartItems.map((item) => (\r\n              <li key={item.product}>\r\n                <div className=\"rows\">\r\n                  <div>\r\n                    <img src={item.image} alt={item.name} className=\"small\" />\r\n                  </div>\r\n                  <div className=\"min-30\">\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </div>\r\n                  <div>\r\n                    <select\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value)),\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                  <div>${item.price}</div>\r\n                  <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <div className=\"card card-body\">\r\n          <ul>\r\n            <li>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, curr) => acc + curr.qty, 0)}{' '}\r\n                items): ${cartItems.reduce((a, c) => a + c.qty * c.price, 0)}\r\n              </h2>\r\n            </li>\r\n            <li>\r\n              <button\r\n                type=\"button\"\r\n                onClick={checkoutHandler}\r\n                className=\"primary block\"\r\n                disabled={cartItems.length === 0}\r\n              >\r\n                Proceed to Checkout\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","D:\\Ecommerce\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Ecommerce\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Ecommerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\Ecommerce\\frontend\\src\\Screens\\SigninScreen.js",[],"D:\\Ecommerce\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Ecommerce\\frontend\\src\\constants\\userConstants.js",[],"D:\\Ecommerce\\frontend\\src\\actions\\userActions.js",[],"D:\\Ecommerce\\frontend\\src\\Screens\\RegisterScreen.js",[],"D:\\Ecommerce\\frontend\\src\\Screens\\ShippingAddressScreen.js",[],"D:\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.jsx",[],"D:\\Ecommerce\\frontend\\src\\Screens\\PaymentMethodScreen.jsx",["154"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nfunction PaymentMethodScreen(props) {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n  if (!shippingAddress.address) {\r\n    props.history.push('/shipping')\r\n  }\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n  const dispatch = useDispatch()\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    props.history.push('/placeorder')\r\n  }\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Payment Method</h1>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"paypal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              required\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n            <label htmlFor=\"paypal\">PayPal</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"stripe\"\r\n              id=\"stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              required\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            />\r\n            <label htmlFor=\"stipe\">Stripe</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button className=\"primary\" type=\"submit\">\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PaymentMethodScreen\r\n","D:\\Ecommerce\\frontend\\src\\Screens\\PlaceOrderScreen.jsx",["155"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nexport default function PlaceOrderScreen(props) {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n  if (!cart.paymentMethod) {\r\n    props.history.push('/payment')\r\n  }\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { loading, success, error, order } = orderCreate\r\n  const toPrice = (num) => Number(num.toFixed(2))\r\n  cart.itemsPrice = toPrice(\r\n    cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0),\r\n  )\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10)\r\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice)\r\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice\r\n  const dispatch = useDispatch()\r\n  const placeOrderhandler = () => {\r\n    dispatch(createOrder({ ...cart, orderItems: cart.cartItems }))\r\n  }\r\n  useEffect(() => {\r\n    if (success) {\r\n      props.history.push(`/order/${order._id}`)\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n  }, [success, props.history, order])\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <div className=\"rows top\">\r\n        <div className=\"col-2\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name: </strong>\r\n                  {cart.shippingAddress.fullName} <br />\r\n                  <strong>Address: </strong>\r\n                  {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\r\n                  {cart.shippingAddress.postalCode},{' '}\r\n                  {cart.shippingAddress.country}\r\n                </p>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Payment</h2>\r\n                <p>\r\n                  <strong>Method: </strong>\r\n                  {cart.paymentMethod}\r\n                </p>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Order Items</h2>\r\n                <ul>\r\n                  {cartItems.map((item) => (\r\n                    <li key={item.product}>\r\n                      <div className=\"rows\">\r\n                        <div>\r\n                          <img\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            className=\"small\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"min-30\">\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div>\r\n                          {item.qty} x ${item.price}=${item.qty * item.price}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <div className=\"card card-body\">\r\n            <ul>\r\n              <li>\r\n                <h2>Order Summary</h2>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>Items</div>\r\n                  <div>${cart.itemsPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>Shipping</div>\r\n                  <div>${cart.shippingPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>Tax</div>\r\n                  <div>${cart.taxPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>\r\n                    <strong>Order Total</strong>\r\n                  </div>\r\n                  <div>\r\n                    <strong>${cart.totalPrice.toFixed(2)}</strong>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={placeOrderhandler}\r\n                  className=\"primary block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                >\r\n                  Place Order\r\n                </button>\r\n              </li>\r\n              {loading && <LoadingBox></LoadingBox>}\r\n              {error && <MessageBox variant=\"danter\">{error}</MessageBox>}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Ecommerce\\frontend\\src\\actions\\orderActions.js",[],"D:\\Ecommerce\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Ecommerce\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Ecommerce\\frontend\\src\\Screens\\OrderScreen.jsx",["156","157"],"import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { detailsOrder, payOrder } from '../actions/orderActions'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\nexport default function OrderScreen(props) {\r\n  const toPrice = (num) => Number(num.toFixed(2))\r\n  const orderId = props.match.params.id\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { error: errorPay, success: successPay, loading: loadingPay } = orderPay\r\n  const { order, loading, error } = orderDetails\r\n  const [loadState, setLoadState] = useState({ loaded: false, loading: false })\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    //console.log(loadState)\r\n    //if (!loadState.loaded && !loadState.loading) {\r\n    const addPayPalScript = async () => {\r\n      const { data } = await Axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setLoadState({ loading: false, loaded: true })\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || order._id !== orderId || successPay) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch(detailsOrder(orderId))\r\n    } else {\r\n      console.log('paid: ', order.isPaid)\r\n      if (!order.isPaid) {\r\n        if (!window.isPaid) {\r\n          addPayPalScript()\r\n        } else {\r\n          setSdkReady(true)\r\n        }\r\n      }\r\n    }\r\n    // addPayPalScript()\r\n    //}\r\n  }, [dispatch, sdkReady, order, orderId, successPay])\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(order, paymentResult))\r\n  }\r\n  return loading ? (\r\n    <LoadingBox></LoadingBox>\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <h1>Order {order._id}</h1>\r\n      <div className=\"rows top\">\r\n        <div className=\"col-2\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name: </strong>\r\n                  {order.shippingAddress.fullName} <br />\r\n                  <strong>Address: </strong>\r\n                  {order.shippingAddress.address}, {order.shippingAddress.city},{' '}\r\n                  {order.shippingAddress.postalCode},{' '}\r\n                  {order.shippingAddress.country}\r\n                </p>\r\n                {order.isDelivered ? (\r\n                  <MessageBox variant=\"success\">\r\n                    Delivered at {order.deliveredAt}\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Payment</h2>\r\n                <p>\r\n                  <strong>Method: </strong>\r\n                  {order.paymentMethod}\r\n                </p>\r\n                {order.isPaid ? (\r\n                  <MessageBox variant=\"success\">\r\n                    Paid at {order.paidAt}\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Order Items</h2>\r\n                <ul>\r\n                  {order.orderItems.map((item) => (\r\n                    <li key={item.product}>\r\n                      <div className=\"rows\">\r\n                        <div>\r\n                          <img\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            className=\"small\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"min-30\">\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div>\r\n                          {item.qty} x ${item.price}=${item.qty * item.price}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <div className=\"card card-body\">\r\n            <ul>\r\n              <li>\r\n                <h2>Order Summary</h2>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>Items</div>\r\n                  <div>${order.itemsPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>Shipping</div>\r\n                  <div>${order.shippingPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>Tax</div>\r\n                  <div>${order.taxPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"rows\">\r\n                  <div>\r\n                    <strong>Order Total</strong>\r\n                  </div>\r\n                  <div>\r\n                    <strong>${order.totalPrice.toFixed(2)}</strong>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                {!order.isPaid && (\r\n                  <li>\r\n                    {!sdkReady ? (\r\n                      <LoadingBox></LoadingBox>\r\n                    ) : (\r\n                      <>\r\n                        {errorPay && (\r\n                          <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                        )}\r\n                        {loadingPay && <LoadingBox />}\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={successPaymentHandler}\r\n                        />\r\n                      </>\r\n                    )}\r\n                  </li>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Ecommerce\\frontend\\src\\Screens\\OrderHistoryScreen.jsx",[],"D:\\Ecommerce\\frontend\\src\\Screens\\ProfileScreen.jsx",[],"D:\\Ecommerce\\frontend\\src\\components\\PrivateRoute.jsx",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"158","replacedBy":"162"},{"ruleId":"160","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":2,"column":9,"nodeType":"166","messageId":"167","endLine":2,"endColumn":17},{"ruleId":"168","severity":1,"message":"169","line":16,"column":6,"nodeType":"170","endLine":16,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":19,"column":8,"nodeType":"170","endLine":19,"endColumn":34,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"174","line":18,"column":6,"nodeType":"170","endLine":18,"endColumn":8,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":46,"column":15,"nodeType":"178","endLine":46,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":34,"column":6,"nodeType":"170","endLine":34,"endColumn":37,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"180","line":11,"column":9,"nodeType":"166","messageId":"167","endLine":11,"endColumn":16},{"ruleId":"164","severity":1,"message":"181","line":18,"column":10,"nodeType":"166","messageId":"167","endLine":18,"endColumn":19},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'detailsProduct' aren't valid dependencies because mutating them doesn't re-render the component.",["185"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["186"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["187"],"'toPrice' is assigned a value but never used.","'loadState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [dispatch]",{"range":"196","text":"197"},"Update the dependencies array to be: [dispatch, productId]",{"range":"198","text":"199"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"200","text":"201"},"Update the dependencies array to be: [success, props.history, order, dispatch]",{"range":"202","text":"203"},[562,564],"[dispatch]",[712,738],"[dispatch, productId]",[622,624],"[dispatch, productId, qty]",[1385,1416],"[success, props.history, order, dispatch]"]